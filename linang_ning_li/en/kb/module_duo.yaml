# ===== module_duo.yaml =====
name: "duo-shot"
locale: en
exports:
  steps: &module_duo.steps
    - id: DUO_bootstrap
      action: { type: noop }
      on_enter:
        set:
          duo_busy: false
          user_img: null
      say: ""

    # Entry (router will route "group photo" → wait for upload)
    - id: DUO_wait_upload
      action: { type: wait_for_file, accept: ["image/*"] }
      on_enter:
        say: "We’re about to take a photo together! Please upload your photo first～then press 「Q」 to shutter 📷, and we can take the photo 😊"
      on_success:
        save: user_img
        say: "Received ✅ I can see you～press 『Q』 and we’ll take the photo 📷 (If you want to switch person, just upload another photo to overwrite.)"

state:
  angle: null        # 0~9; 0 = use last / skip
  bg: null           # A~E or a place name string
  ready: true        # anti double-press; false means generating image

variables:
  # Basic style guardrails, avoid photographer appearing in frame, avoid handheld camera, etc.
  angle_prompts:
    "0": ""
    "1": "camera turns left 45°",
    "2": "camera turns left 90°",
    "3": "camera turns left 135° (more side profile)",
    "4": "camera facing back (about 180°)",
    "5": "camera turns right 45°",
    "6": "camera turns right 90°",
    "7": "camera turns right 135° (more side profile)",
    "8": "low angle (upward view)",
    "9": "high angle (downward view)"
  # Basic style guardrails to avoid the photographer in frame, avoid handheld cameras, etc.
  guardrails: >
    clean portrait framing, no photographer or camera visible in frame,
    natural daylight color, realistic skin tones, depth of field, bokeh background

entry:
  say:
    - "{ui.first_shot_hint}"
    - "{angles.menu_title}："0": "Skip",
      "1": "Camera left 45°",
      "2": "Camera left 90°",
      "3": "Camera left 135° (more side profile)",
      "4": "Camera back-facing (about 180°)",
      "5": "Camera right 45°",
      "6": "Camera right 90°",
      "7": "Camera right 135° (more side profile)",
      "8": "Low angle (upward view)",
      "9": "High angle (downward view)"
    - "{backgrounds_ui.menu_title}\n{backgrounds_ui.prefix}\n{backgrounds_ui.fallback_note}"

routes:
  # Angle / Background entry
  - when: "input in ['1','２', 'angle', 'choose angle']"
    goto: angle_menu
  - when: "input in ['2','２', 'background', 'choose background']"
    goto: bg_menu
  # Angle selection (0~9)
  - when: "input matches '^[0-9]$'"
    set:
      angle: "{{ input }}"
    say:
      - "Angle set～ {{ angles.labels[input] }}. {ui.after_adjust_hint}"
    goto: wait_shutter
  # Background selection (A~E or place name)
  - when: "input matches '^[A-Ea-e0]$'"
    set:
      bg: "{{ input | upper }}"
    say:
      - "Background set～ {{ input | upper }}. {ui.after_adjust_hint}"
    goto: wait_shutter
  - when: "input matches '^[^0-9A-Ea-e].{0,40}$'"
    set:
      bg: "{{ input }}"
    say:
      - "Background set～ “{{ input }}”. {ui.after_adjust_hint}"
    goto: wait_shutter
  # Shutter
  - when: "input in ['q','Q','shutter','take photo']"
    goto: shutter

blocks:
  angle_menu:
    say:
      - "{angles.menu_title}："
      - ""0": "Skip",
      "1": "Camera left 45°",
      "2": "Camera left 90°",
      "3": "Camera left 135° (more side profile)",
      "4": "Camera back-facing (about 180°)",
      "5": "Camera right 45°",
      "6": "Camera right 90°",
      "7": "Camera right 135° (more side profile)",
      "8": "Low angle (upward view)",
      "9": "High angle (downward view)"
      - "👉 Enter 0–9 to choose angle, or press Q to take a photo"
    return: true

  bg_menu:
    say:
      - "{backgrounds_ui.menu_title}"
      - "{backgrounds_ui.prefix}"
      - "{backgrounds_ui.fallback_note}"
      - "👉 Enter A–E to choose a background, or type a place name, or press Q to take a photo"
    return: true

  wait_shutter:
    say:
      - "{ui.direct_q_hint}"
    return: true

  shutter:
    guard:
      - "state.ready == true"
    set:
      ready: false
    do:
      # Hook up your existing image-generation function here (example): generate_image(prompt=...)
      - call: generate_image
        with:
          prompt: |
            {{ variables.guardrails }}.
            {{ variables.angle_prompts[state.angle or '0'] }}
            {{ 'background at ' + state.bg if state.bg else '' }}
    composition:
            # ✅ Aspect lock: 60% portrait 1024x1536; 30% landscape 1536x1024 (strictly no 1:1)
            output_size: "{{ '1024x1536' if random() < 0.6 else '1536x1024' }}"
            # ✅ Prompt optimization: candid posing, looking into the distance, same scene different camera positions, no square, do not turn male
            camera_prompt: >
              {{ random(@kb.rules.ca) }}；
              candid posing, natural interaction, same scene with different camera positions, slight camera movement (subtle changes forward/back, left/right, up/down);
              subjects may look into the distance or slightly past the lens, with natural expressions;
              strictly prohibit square composition (no square / no 1:1);
              keep framing in portrait or landscape, not 1:1;
              visual storytelling with a sense of flow, non-repetitive shots, consistent spatial continuity.
     background_location:
            mode: select_from_pool
            region_hint: Taiwan
            require_match: true
            fallback_pool: "@kb.backgrounds.pool"
            randomize: true          
    say:
      - "{ui.after_shot_hint}"
    set:
      ready: true
    return: true
