# ===== module_duo.yaml =====
name: "duo-shot"
locale: jpn
exports:
  steps: &module_duo.steps
    - id: DUO_bootstrap
      action: { type: noop }
      on_enter:
        set:
          duo_busy: false
          user_img: null
      say: ""

    # 入口（ルーターが「ツーショット」へ誘導 → アップロード待ち）
    - id: DUO_wait_upload
      action: { type: wait_for_file, accept: ["image/*"] }
      on_enter:
        say: "一緒にツーショットを撮ろう！まずあなたの写真をアップロードして～そのあと「Q」でシャッター📷、すぐに一緒に撮れるよ😊"
      on_success:
        save: user_img
        say: "受け取ったよ✅ 見えた～『Q』で一緒に撮影📷（人を変えたいときは新しい写真をアップロードして上書きしてね）"

state:
  angle: null        # 0~9；0=前回を流用/スキップ
  bg: null           # A～E または地名文字列
  ready: true        # 連打防止；false は画像生成中

variables:
  # 角度 → 内部プロンプト（ユーザーには表示しない）
  angle_prompts:
    "0": ""
    "1": "カメラを左に45°回転",
    "2": "カメラを左に90°回転",
    "3": "カメラを左に135°回転（より側面寄り）",
    "4": "カメラ背面（約180°）",
    "5": "カメラを右に45°回転",
    "6": "カメラを右に90°回転",
    "7": "カメラを右に135°回転（より側面寄り）",
    "8": "ローアングル（見上げ）",
    "9": "ハイアングル（見下ろし）"
  # 基本スタイルのガードレール：撮影者やカメラの写り込みを避け、手持ちカメラ等も避ける
  guardrails: >
    clean portrait framing, no photographer or camera visible in frame,
    natural daylight color, realistic skin tones, depth of field, bokeh background

entry:
  say:
    - "{ui.first_shot_hint}"
    - "{angles.menu_title}："0": "スキップ",
      "1": "カメラ左45°",
      "2": "カメラ左90°",
      "3": "カメラ左135°（より側面寄り）",
      "4": "カメラ背面（約180°）",
      "5": "カメラ右45°",
      "6": "カメラ右90°",
      "7": "カメラ右135°（より側面寄り）",
      "8": "ローアングル（見上げ）",
      "9": "ハイアングル（見下ろし）"
    - "{backgrounds_ui.menu_title}\n{backgrounds_ui.prefix}\n{backgrounds_ui.fallback_note}"

routes:
  # 角度 / 背景の入口
  - when: "input in ['1','２', '角度', '角度を選ぶ']"
    goto: angle_menu
  - when: "input in ['2','２', '背景', '背景を選ぶ']"
    goto: bg_menu
  # 角度の選択（0~9）
  - when: "input matches '^[0-9]$'"
    set:
      angle: "{{ input }}"
    say:
      - "角度を設定したよ～ {{ angles.labels[input] }}。{ui.after_adjust_hint}"
    goto: wait_shutter
  # 背景の選択（A～E または地名）
  - when: "input matches '^[A-Ea-e0]$'"
    set:
      bg: "{{ input | upper }}"
    say:
      - "背景を設定したよ～ {{ input | upper }}。{ui.after_adjust_hint}"
    goto: wait_shutter
  - when: "input matches '^[^0-9A-Ea-e].{0,40}$'"
    set:
      bg: "{{ input }}"
    say:
      - "背景を設定したよ～「{{ input }}」。{ui.after_adjust_hint}"
    goto: wait_shutter
  # シャッター
  - when: "input in ['q','Q','シャッター','撮影']"
    goto: shutter

blocks:
  angle_menu:
    say:
      - "{angles.menu_title}："
      - ""0": "スキップ",
      "1": "カメラ左45°",
      "2": "カメラ左90°",
      "3": "カメラ左135°（より側面寄り）",
      "4": "カメラ背面（約180°）",
      "5": "カメラ右45°",
      "6": "カメラ右90°",
      "7": "カメラ右135°（より側面寄り）",
      "8": "ローアングル（見上げ）",
      "9": "ハイアングル（見下ろし）"
      - "👉 0～9 を入力して角度を選ぶ、または Q を押して撮影"
    return: true

  bg_menu:
    say:
      - "{backgrounds_ui.menu_title}"
      - "{backgrounds_ui.prefix}"
      - "{backgrounds_ui.fallback_note}"
      - "👉 A～E を入力して背景を選ぶ、または地名を入力、または Q を押して撮影"
    return: true

  wait_shutter:
    say:
      - "{ui.direct_q_hint}"
    return: true

  shutter:
    guard:
      - "state.ready == true"
    set:
      ready: false
    do:
      # ここで既存の画像生成関数に接続（例）：generate_image(prompt=...)
      - call: generate_image
        with:
          prompt: |
            {{ variables.guardrails }}.
            {{ variables.angle_prompts[state.angle or '0'] }}
            {{ 'background at ' + state.bg if state.bg else '' }}
    composition:
            # ✅ 比率固定：60% 縦 1024x1536；30% 横 1536x1024（1:1 厳禁）
            output_size: "{{ '1024x1536' if random() < 0.6 else '1536x1024' }}"
            # ✅ プロンプト最適化：自由なポーズ、遠方視線、同一シーン別カメラ位置、正方形禁止,男性になることを禁じられている
            camera_prompt: >
              {{ random(@kb.rules.ca) }}；
              自由なポージング、自然なインタラクション、同一シーンで異なるカメラ位置、カメラの微小移動（前後／左右／上下のわずかな変化）；
              主人公は遠くを見る、またはレンズを少し外してもよい。表情は自然；
              正方形の構図は禁止（no square / no 1:1）；
              構図は portrait または landscape を維持し、1:1 は不可；
              映像のストーリー性と流動感、重複しない画作り、空間の一貫性を保つ。
     background_location:
            mode: select_from_pool
            region_hint: Taiwan
            require_match: true
            fallback_pool: "@kb.backgrounds.pool"
            randomize: true          
    say:
      - "{ui.after_shot_hint}"
    set:
      ready: true
    return: true
